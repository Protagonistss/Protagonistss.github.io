<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>protagonistss</title>
  
  <subtitle>我心向光明</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://protagonistss.github.io.com/"/>
  <updated>2019-12-27T10:35:08.174Z</updated>
  <id>http://protagonistss.github.io.com/</id>
  
  <author>
    <name>protagonist</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git Commands</title>
    <link href="http://protagonistss.github.io.com/2019/12/28/git-command/"/>
    <id>http://protagonistss.github.io.com/2019/12/28/git-command/</id>
    <published>2019-12-27T18:29:48.000Z</published>
    <updated>2019-12-27T10:35:08.174Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、分支"><a href="#一、分支" class="headerlink" title="一、分支"></a>一、分支</h3><ul><li><p>查看分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch <span class="comment"># 查看本地当前所有分支</span></span><br><span class="line">git branch -r <span class="comment"># 查看远程服务器上的所有分支</span></span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h3 id="二、合并"><a href="#二、合并" class="headerlink" title="二、合并"></a>二、合并</h3><ul><li><p>合并分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;branch&gt; --no -ff -m<span class="string">"xxxxxx"</span></span><br></pre></td></tr></table></figure></li><li><p>如果你已经把解决冲突的方案搞砸了,想回到尝试解决冲突前的原始冲突状态,你可以使用 如下命令,该命令会丢弃本次合并，回到上次commit的HEAD上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset &lt;commit id&gt; --hard</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、分支&quot;&gt;&lt;a href=&quot;#一、分支&quot; class=&quot;headerlink&quot; title=&quot;一、分支&quot;&gt;&lt;/a&gt;一、分支&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看分支&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch &lt;span class=&quot;comment&quot;&gt;# 查看本地当前所有分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git branch -r &lt;span class=&quot;comment&quot;&gt;# 查看远程服务器上的所有分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Git" scheme="http://protagonistss.github.io.com/categories/Git/"/>
    
    
      <category term="git-command" scheme="http://protagonistss.github.io.com/tags/git-command/"/>
    
  </entry>
  
  <entry>
    <title>队列</title>
    <link href="http://protagonistss.github.io.com/2019/12/28/triangle/"/>
    <id>http://protagonistss.github.io.com/2019/12/28/triangle/</id>
    <published>2019-12-27T18:03:19.000Z</published>
    <updated>2019-12-30T03:10:13.603Z</updated>
    
    <content type="html"><![CDATA[<h3 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h3><blockquote><p>利用数组定义队列,在队列的基础上实现一些功能</p></blockquote><h4 id="一、定义队列"><a href="#一、定义队列" class="headerlink" title="一、定义队列"></a>一、定义队列</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Queue</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> items = []</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.enqueue = <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    items.push(item)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.dequeue = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items.shift()</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.head = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items[<span class="number">0</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.tail = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items[items.length - <span class="number">1</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.size = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items.length</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.clear = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    items = []</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.Empty = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items.length === <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="二、实现斐波那契"><a href="#二、实现斐波那契" class="headerlink" title="二、实现斐波那契"></a>二、实现斐波那契</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用队列实现斐波那契,此处默认n &gt; 2</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fibonacci</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> queue = <span class="keyword">new</span> Queue()</span><br><span class="line">  queue.enqueue(<span class="number">1</span>)</span><br><span class="line">  queue.enqueue(<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">var</span> index = <span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span>(index &lt; n - <span class="number">2</span> )&#123;</span><br><span class="line">     <span class="keyword">var</span> old_head_data = queue.dequeue()</span><br><span class="line">     <span class="keyword">var</span> new_head_data = queue.head()</span><br><span class="line">     <span class="keyword">var</span> next_data = old_head_data + new_head_data</span><br><span class="line">     queue.enqueue(next_data)</span><br><span class="line">    index += <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">  queue.dequeue()</span><br><span class="line">  <span class="keyword">return</span> queue.head()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>队列中始终只有两个数, 第二个数便是所求的数</p></blockquote><h4 id="三、循环删除"><a href="#三、循环删除" class="headerlink" title="三、循环删除"></a>三、循环删除</h4><blockquote><p>有一个数组a[100] 存放0-99,要求每隔两个数删掉一个数,到末尾时循环至开头继续进行,求最后一个被删除的数.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deleteCircle</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> queue = <span class="keyword">new</span> Queue()</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">    queue.enqueue(arr[i])</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> index = <span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span>(queue.size() != <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> item = queue.dequeue()</span><br><span class="line">    index += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(index % <span class="number">3</span> != <span class="number">0</span>)&#123;</span><br><span class="line">      queue.enqueue(item)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = []</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)&#123;</span><br><span class="line">  arr.push(i)</span><br><span class="line">&#125;</span><br><span class="line">deleteCircle(arr)</span><br></pre></td></tr></table></figure><h4 id="四、使用两个队列实现一个栈"><a href="#四、使用两个队列实现一个栈" class="headerlink" title="四、使用两个队列实现一个栈"></a>四、使用两个队列实现一个栈</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Stack</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> init_queue_first  = <span class="keyword">new</span> Queue()</span><br><span class="line">  <span class="keyword">var</span> init_queue_second = <span class="keyword">new</span> Queue()</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> data_queue = <span class="literal">null</span></span><br><span class="line"> <span class="keyword">var</span> empty_queue = <span class="literal">null</span></span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">validateEmptyQueue</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(init_queue_first.isEmpty()&amp;&amp; init_queue_second.isEmpty())&#123;</span><br><span class="line">    data_queue = init_queue_first</span><br><span class="line">      empty_queue = init_queue_second</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(init_queue_first.isEmpty())&#123;</span><br><span class="line">      data_queue = init_queue_second</span><br><span class="line">      empty_queue = init_queue_first</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      data_queue = init_queue_first</span><br><span class="line">      empty_queue = init_queue_second</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.push = <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    validateEmptyQueue()</span><br><span class="line">    data_queue.enqueue(item)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.top = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    validateEmptyQueue()</span><br><span class="line">    <span class="keyword">return</span> data_queue.tail()</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.pop = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    validateEmptyQueue()</span><br><span class="line">    <span class="keyword">while</span>(data_queue.size()&gt;<span class="number">1</span>)&#123;</span><br><span class="line">      empty_queue.enqueue(data_queue.dequeue())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data_queue.dequeue()</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> stack = <span class="keyword">new</span> Stack()</span><br><span class="line">  stack.push(<span class="number">1</span>)</span><br><span class="line">  stack.push(<span class="number">2</span>)</span><br><span class="line">  <span class="built_in">console</span>.log(stack.pop())</span><br><span class="line">  <span class="built_in">console</span>.log(stack.pop())</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;队列&quot;&gt;&lt;a href=&quot;#队列&quot; class=&quot;headerlink&quot; title=&quot;队列&quot;&gt;&lt;/a&gt;队列&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;利用数组定义队列,在队列的基础上实现一些功能&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;一、定义队列&quot;&gt;&lt;a href=&quot;#一、定义队列&quot; class=&quot;headerlink&quot; title=&quot;一、定义队列&quot;&gt;&lt;/a&gt;一、定义队列&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Queue&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; items = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.enqueue = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    items.push(item)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.dequeue = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; items.shift()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.head = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; items[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tail = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; items[items.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.size = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; items.length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.clear = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    items = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.Empty = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; items.length === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="arithmetic javascript" scheme="http://protagonistss.github.io.com/categories/arithmetic-javascript/"/>
    
    
      <category term="Queue" scheme="http://protagonistss.github.io.com/tags/Queue/"/>
    
  </entry>
  
  <entry>
    <title>计算表达式</title>
    <link href="http://protagonistss.github.io.com/2019/12/28/cal-exp/"/>
    <id>http://protagonistss.github.io.com/2019/12/28/cal-exp/</id>
    <published>2019-12-27T17:24:00.000Z</published>
    <updated>2019-12-27T10:12:55.569Z</updated>
    
    <content type="html"><![CDATA[<h3 id="计算表达式拆解"><a href="#计算表达式拆解" class="headerlink" title="计算表达式拆解"></a>计算表达式拆解</h3><blockquote><p>本例子使用数组实现栈,在栈的基础上 实现计算表达式</p></blockquote><h4 id="一、定义栈"><a href="#一、定义栈" class="headerlink" title="一、定义栈"></a>一、定义栈</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Stack</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> items = []</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.push = <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    items.push(item)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.pop = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items.pop()</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.isEmpty = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items.length === <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.size = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items.length</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.top = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items[items.length - <span class="number">1</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.clear = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    items = []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="二、用上述栈先来实现一个判断左右括号闭合的方法"><a href="#二、用上述栈先来实现一个判断左右括号闭合的方法" class="headerlink" title="二、用上述栈先来实现一个判断左右括号闭合的方法"></a>二、用上述栈先来实现一个判断左右括号闭合的方法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> stack = <span class="keyword">new</span> Stack()</span><br><span class="line"><span class="comment">// validator</span></span><br><span class="line"><span class="comment">// 只入栈括号,</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isLegal</span>(<span class="params">param</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;param.length; i++)&#123;</span><br><span class="line">    <span class="keyword">var</span> item = param[i]</span><br><span class="line">    <span class="keyword">if</span>(item === <span class="string">'('</span>)&#123;</span><br><span class="line">      stack.push(item)</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(item === <span class="string">')'</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(stack.isEmpty())&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        stack.pop()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> stack.isEmpty()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">isLegal(<span class="string">"((abc))"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;计算表达式拆解&quot;&gt;&lt;a href=&quot;#计算表达式拆解&quot; class=&quot;headerlink&quot; title=&quot;计算表达式拆解&quot;&gt;&lt;/a&gt;计算表达式拆解&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;本例子使用数组实现栈,在栈的基础上 实现计算表达式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;一、定义栈&quot;&gt;&lt;a href=&quot;#一、定义栈&quot; class=&quot;headerlink&quot; title=&quot;一、定义栈&quot;&gt;&lt;/a&gt;一、定义栈&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Stack&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; items = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.push = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    items.push(item)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.pop = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; items.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.isEmpty = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; items.length === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.size = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; items.length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.top = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; items[items.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.clear = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    items = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="arithmetic javascript" scheme="http://protagonistss.github.io.com/categories/arithmetic-javascript/"/>
    
    
      <category term="arithmetic" scheme="http://protagonistss.github.io.com/tags/arithmetic/"/>
    
  </entry>
  
  <entry>
    <title>nginx依赖</title>
    <link href="http://protagonistss.github.io.com/2019/10/11/nginx%E4%BE%9D%E8%B5%96/"/>
    <id>http://protagonistss.github.io.com/2019/10/11/nginx依赖/</id>
    <published>2019-10-11T11:11:04.000Z</published>
    <updated>2019-10-11T03:12:35.894Z</updated>
    
    <content type="html"><![CDATA[<h3 id="编译安装nginx需要安装依赖"><a href="#编译安装nginx需要安装依赖" class="headerlink" title="编译安装nginx需要安装依赖"></a>编译安装nginx需要安装依赖</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++</span><br><span class="line">yum -y install zlib zlib-devel openssl openssl-devel pcre-devel</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;编译安装nginx需要安装依赖&quot;&gt;&lt;a href=&quot;#编译安装nginx需要安装依赖&quot; class=&quot;headerlink&quot; title=&quot;编译安装nginx需要安装依赖&quot;&gt;&lt;/a&gt;编译安装nginx需要安装依赖&lt;/h3&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
      <category term="nginx" scheme="http://protagonistss.github.io.com/categories/nginx/"/>
    
    
      <category term="nginx dependency" scheme="http://protagonistss.github.io.com/tags/nginx-dependency/"/>
    
  </entry>
  
  <entry>
    <title>mongo</title>
    <link href="http://protagonistss.github.io.com/2019/06/22/mongo/"/>
    <id>http://protagonistss.github.io.com/2019/06/22/mongo/</id>
    <published>2019-06-21T16:48:46.000Z</published>
    <updated>2019-06-21T08:53:23.188Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Mongo的mongodump、mongorestore"><a href="#Mongo的mongodump、mongorestore" class="headerlink" title="Mongo的mongodump、mongorestore"></a>Mongo的mongodump、mongorestore</h4><h6 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongodump -d individtax -o /users/</span><br></pre></td></tr></table></figure><h6 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongorestore -d individtax --dir /users/individtax/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Mongo的mongodump、mongorestore&quot;&gt;&lt;a href=&quot;#Mongo的mongodump、mongorestore&quot; class=&quot;headerlink&quot; title=&quot;Mongo的mongodump、mongorestore&quot;&gt;&lt;/a&gt;Mo
      
    
    </summary>
    
      <category term="mongo" scheme="http://protagonistss.github.io.com/categories/mongo/"/>
    
    
      <category term="mongo" scheme="http://protagonistss.github.io.com/tags/mongo/"/>
    
  </entry>
  
  <entry>
    <title>scp</title>
    <link href="http://protagonistss.github.io.com/2019/06/21/scp/"/>
    <id>http://protagonistss.github.io.com/2019/06/21/scp/</id>
    <published>2019-06-21T15:40:07.000Z</published>
    <updated>2019-06-21T07:42:51.957Z</updated>
    
    <content type="html"><![CDATA[<h4 id="SCP-复制远程服务器上的目录"><a href="#SCP-复制远程服务器上的目录" class="headerlink" title="SCP 复制远程服务器上的目录"></a>SCP 复制远程服务器上的目录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -p 22 -r root@ip:/home/example/ /temp/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;SCP-复制远程服务器上的目录&quot;&gt;&lt;a href=&quot;#SCP-复制远程服务器上的目录&quot; class=&quot;headerlink&quot; title=&quot;SCP 复制远程服务器上的目录&quot;&gt;&lt;/a&gt;SCP 复制远程服务器上的目录&lt;/h4&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
      <category term="linux" scheme="http://protagonistss.github.io.com/categories/linux/"/>
    
    
      <category term="scp" scheme="http://protagonistss.github.io.com/tags/scp/"/>
    
  </entry>
  
  <entry>
    <title>查看使用的端口</title>
    <link href="http://protagonistss.github.io.com/2019/06/02/%E6%9F%A5%E7%9C%8B%E4%BD%BF%E7%94%A8%E7%9A%84%E7%AB%AF%E5%8F%A3/"/>
    <id>http://protagonistss.github.io.com/2019/06/02/查看使用的端口/</id>
    <published>2019-06-01T20:21:06.000Z</published>
    <updated>2019-06-01T12:23:43.470Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Centos7"><a href="#Centos7" class="headerlink" title="Centos7"></a>Centos7</h5><p>查看服务器端口号目前的使用情况</p><p>netstat -luntp</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Centos7&quot;&gt;&lt;a href=&quot;#Centos7&quot; class=&quot;headerlink&quot; title=&quot;Centos7&quot;&gt;&lt;/a&gt;Centos7&lt;/h5&gt;&lt;p&gt;查看服务器端口号目前的使用情况&lt;/p&gt;
&lt;p&gt;netstat -luntp&lt;/p&gt;

      
    
    </summary>
    
      <category term="linux" scheme="http://protagonistss.github.io.com/categories/linux/"/>
    
    
      <category term="luntp" scheme="http://protagonistss.github.io.com/tags/luntp/"/>
    
  </entry>
  
  <entry>
    <title>rewrite</title>
    <link href="http://protagonistss.github.io.com/2019/06/02/rewrite/"/>
    <id>http://protagonistss.github.io.com/2019/06/02/rewrite/</id>
    <published>2019-06-01T20:06:54.000Z</published>
    <updated>2019-12-27T10:42:44.114Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、Rewrite"><a href="#一、Rewrite" class="headerlink" title="一、Rewrite"></a>一、Rewrite</h4><p>​    实现url<span style="color:red">重写</span>以及<span style="color:red">重定向</span></p><h4 id="二、场景"><a href="#二、场景" class="headerlink" title="二、场景"></a>二、场景</h4><p>​    url访问跳转,支持开发设计(页面跳转,兼容性支持,展示效果等)</p><p>​    SEO优化</p><p>​    运维人员维护</p><p>​    后台维护、流量转发</p><p>​    安全-&gt;伪静态</p><h4 id="三、配置语法"><a href="#三、配置语法" class="headerlink" title="三、配置语法"></a>三、配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Systanx: rewrite regx replacement[flag]</span><br><span class="line">​Default: --</span><br><span class="line">​Context:server,location,<span class="keyword">if</span></span><br></pre></td></tr></table></figure><p>​    <a id="more"></a></p><h4 id="四、正则"><a href="#四、正则" class="headerlink" title="四、正则"></a>四、正则</h4><p>​    pcre 正则测试</p><h4 id="五、Flag"><a href="#五、Flag" class="headerlink" title="五、Flag"></a>五、Flag</h4><p>​    last : 停止rewrite 检测</p><p>​    Break: 停止rewrite 检测</p><p>​    redirect : 返回302临时重定向,地址栏会显示跳转后的地址</p><p>​    permanent : 返回301永久重定向，地址栏会显示跳转后的地址 (nginx 停掉也会重定向)</p><h4 id="六、Rewrite-规则优先级"><a href="#六、Rewrite-规则优先级" class="headerlink" title="六、Rewrite 规则优先级"></a>六、Rewrite 规则优先级</h4><p>​    执行server块的rewrite指令</p><p>​    执行location匹配</p><p>​    执行选定的location中的rewrite</p><h4 id="七、示例"><a href="#七、示例" class="headerlink" title="七、示例"></a>七、示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    listen  6060;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/host.access.log  main;</span><br><span class="line">    root /opt/app/code;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        rewrite ^/course-(\d+)-(\d+)-(\d+)\.html$ /course/<span class="variable">$1</span>/<span class="variable">$2</span>/course_<span class="variable">$3</span>.html <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* Chrome) &#123;</span><br><span class="line">            rewrite ^/nginx http://www.baidu.com redirect;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!-f <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">            rewrite ^/(.*)$ http://www.baidu.com redirect;</span><br><span class="line">        &#125;</span><br><span class="line">        index  index.html  index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^/<span class="built_in">break</span> &#123;</span><br><span class="line">        rewrite ^/<span class="built_in">break</span> /<span class="built_in">test</span>/ <span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^/last &#123;</span><br><span class="line">        <span class="comment">#rewrite ^/last /test/ last;</span></span><br><span class="line">        rewrite ^/last /<span class="built_in">test</span>/ redirect;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^/protagonist &#123;</span><br><span class="line">    <span class="comment">#rewrite ^/protagonist  http://39.97.187.133:80 permanent;</span></span><br><span class="line">rewrite ^/protagonist  http://39.97.187.133:80 redirect;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /<span class="built_in">test</span>/ &#123;</span><br><span class="line">default_type  application/json;</span><br><span class="line"><span class="built_in">return</span> 200 <span class="string">'&#123;"status":"success"&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、Rewrite&quot;&gt;&lt;a href=&quot;#一、Rewrite&quot; class=&quot;headerlink&quot; title=&quot;一、Rewrite&quot;&gt;&lt;/a&gt;一、Rewrite&lt;/h4&gt;&lt;p&gt;​    实现url&lt;span style=&quot;color:red&quot;&gt;重写&lt;/span&gt;以及&lt;span style=&quot;color:red&quot;&gt;重定向&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;二、场景&quot;&gt;&lt;a href=&quot;#二、场景&quot; class=&quot;headerlink&quot; title=&quot;二、场景&quot;&gt;&lt;/a&gt;二、场景&lt;/h4&gt;&lt;p&gt;​    url访问跳转,支持开发设计(页面跳转,兼容性支持,展示效果等)&lt;/p&gt;
&lt;p&gt;​    SEO优化&lt;/p&gt;
&lt;p&gt;​    运维人员维护&lt;/p&gt;
&lt;p&gt;​    后台维护、流量转发&lt;/p&gt;
&lt;p&gt;​    安全-&amp;gt;伪静态&lt;/p&gt;
&lt;h4 id=&quot;三、配置语法&quot;&gt;&lt;a href=&quot;#三、配置语法&quot; class=&quot;headerlink&quot; title=&quot;三、配置语法&quot;&gt;&lt;/a&gt;三、配置语法&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Systanx: rewrite regx replacement[flag]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;​	Default: --&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;​	Context:server,location,&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="nginx" scheme="http://protagonistss.github.io.com/categories/nginx/"/>
    
    
      <category term="rewrite" scheme="http://protagonistss.github.io.com/tags/rewrite/"/>
    
  </entry>
  
  <entry>
    <title>常见nginx中间件架构</title>
    <link href="http://protagonistss.github.io.com/2019/05/24/%E5%B8%B8%E8%A7%81nginx%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%9E%B6%E6%9E%84/"/>
    <id>http://protagonistss.github.io.com/2019/05/24/常见nginx中间件架构/</id>
    <published>2019-05-23T21:44:43.000Z</published>
    <updated>2019-05-23T13:50:31.667Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、静态资源"><a href="#一、静态资源" class="headerlink" title="一、静态资源"></a>一、静态资源</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、静态资源&quot;&gt;&lt;a href=&quot;#一、静态资源&quot; class=&quot;headerlink&quot; title=&quot;一、静态资源&quot;&gt;&lt;/a&gt;一、静态资源&lt;/h4&gt;
      
    
    </summary>
    
      <category term="nginx" scheme="http://protagonistss.github.io.com/categories/nginx/"/>
    
    
      <category term="nginx常见中间件架构" scheme="http://protagonistss.github.io.com/tags/nginx%E5%B8%B8%E8%A7%81%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>mysql安装</title>
    <link href="http://protagonistss.github.io.com/2019/05/23/mysql%E5%AE%89%E8%A3%85/"/>
    <id>http://protagonistss.github.io.com/2019/05/23/mysql安装/</id>
    <published>2019-05-22T19:07:10.000Z</published>
    <updated>2019-05-22T11:08:30.475Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Install-Mysql"><a href="#Install-Mysql" class="headerlink" title="Install Mysql"></a>Install Mysql</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Install-Mysql&quot;&gt;&lt;a href=&quot;#Install-Mysql&quot; class=&quot;headerlink&quot; title=&quot;Install Mysql&quot;&gt;&lt;/a&gt;Install Mysql&lt;/h4&gt;
      
    
    </summary>
    
      <category term="mysql" scheme="http://protagonistss.github.io.com/categories/mysql/"/>
    
    
      <category term="install mysql" scheme="http://protagonistss.github.io.com/tags/install-mysql/"/>
    
  </entry>
  
  <entry>
    <title>node安装</title>
    <link href="http://protagonistss.github.io.com/2019/05/22/node%E5%AE%89%E8%A3%85/"/>
    <id>http://protagonistss.github.io.com/2019/05/22/node安装/</id>
    <published>2019-05-22T14:19:10.000Z</published>
    <updated>2019-05-22T06:42:08.617Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Node-Install"><a href="#Node-Install" class="headerlink" title="Node Install"></a>Node Install</h5><ul><li><p>Centos</p><ul><li><p>cd /usr/local</p></li><li><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github-production-release-asset-2e65be.s3.amazonaws.com/49970642/4ea79e00-6a70-11e9-8a21-46a123284fc5?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20190522%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20190522T052650Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=a92bd6d054a303</span><br></pre></td></tr></table></figure></li><li><p>此时下载的是二进制的包,不是采用源码安装,所以解压后没有configure文件</p></li><li><p>解压下载后的压缩包</p></li><li><p><code>tar -xvf node-v10.15.3-linux-x64</code></p></li><li><p>配置环境变量</p><ul><li>编辑.bash_profile<ul><li><code>export PATH=$PATH:/usr/local/node-v10.15.3-linux-x64/bin</code></li><li><code>source .bash_profile</code></li></ul></li></ul></li><li><p>配置软连接</p><ul><li><code>ln -s /usr/local/node-v10.15.3-linux-x64/bin/node /usr/local/bin</code></li><li><code>ln -s /usr/local/node-v10.15.3-linux-x64/bin/npm /usr/local/bin</code></li><li><code>ln -s /usr/local/node-v10.15.3-linux-x64/bin/npx /usr/local/bin</code></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Node-Install&quot;&gt;&lt;a href=&quot;#Node-Install&quot; class=&quot;headerlink&quot; title=&quot;Node Install&quot;&gt;&lt;/a&gt;Node Install&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Centos&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;
      
    
    </summary>
    
      <category term="node" scheme="http://protagonistss.github.io.com/categories/node/"/>
    
    
      <category term="node install" scheme="http://protagonistss.github.io.com/tags/node-install/"/>
    
  </entry>
  
  <entry>
    <title>Yarn的安装</title>
    <link href="http://protagonistss.github.io.com/2019/05/22/Yarn%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://protagonistss.github.io.com/2019/05/22/Yarn的安装/</id>
    <published>2019-05-22T13:29:54.000Z</published>
    <updated>2019-05-22T05:33:08.739Z</updated>
    
    <content type="html"><![CDATA[<h5 id="INSTALL-YARN"><a href="#INSTALL-YARN" class="headerlink" title="INSTALL YARN"></a>INSTALL YARN</h5><ul><li><p>添加yum源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install yarn -y</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;INSTALL-YARN&quot;&gt;&lt;a href=&quot;#INSTALL-YARN&quot; class=&quot;headerlink&quot; title=&quot;INSTALL YARN&quot;&gt;&lt;/a&gt;INSTALL YARN&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;添加yum源&lt;/p&gt;
&lt;figure cl
      
    
    </summary>
    
      <category term="Centos7" scheme="http://protagonistss.github.io.com/categories/Centos7/"/>
    
    
      <category term="yarn" scheme="http://protagonistss.github.io.com/tags/yarn/"/>
    
  </entry>
  
  <entry>
    <title>website</title>
    <link href="http://protagonistss.github.io.com/2019/05/19/website/"/>
    <id>http://protagonistss.github.io.com/2019/05/19/website/</id>
    <published>2019-05-19T00:13:11.000Z</published>
    <updated>2019-05-18T16:14:35.230Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Create-command"><a href="#Create-command" class="headerlink" title="Create command"></a>Create command</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Create-command&quot;&gt;&lt;a href=&quot;#Create-command&quot; class=&quot;headerlink&quot; title=&quot;Create command&quot;&gt;&lt;/a&gt;Create command&lt;/h5&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="website" scheme="http://protagonistss.github.io.com/categories/website/"/>
    
    
      <category term="vps" scheme="http://protagonistss.github.io.com/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>css-样式选中</title>
    <link href="http://protagonistss.github.io.com/2019/05/16/css-%E6%A0%B7%E5%BC%8F%E9%80%89%E4%B8%AD/"/>
    <id>http://protagonistss.github.io.com/2019/05/16/css-样式选中/</id>
    <published>2019-05-16T11:01:33.000Z</published>
    <updated>2019-05-16T04:39:21.731Z</updated>
    
    <content type="html"><![CDATA[<h5 id="CSS选中元素"><a href="#CSS选中元素" class="headerlink" title="CSS选中元素"></a>CSS选中元素</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>:</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">css</span>:</span><br><span class="line"><span class="selector-tag">style</span>&#123;</span><br><span class="line">  # 选中第一个p标签</span><br><span class="line">  <span class="selector-tag">div</span> <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">  # 选中除了第一个<span class="selector-tag">p</span>标签以外的标签</span><br><span class="line">  <span class="selector-tag">div</span> <span class="selector-tag">p</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:first-child)</span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;CSS选中元素&quot;&gt;&lt;a href=&quot;#CSS选中元素&quot; class=&quot;headerlink&quot; title=&quot;CSS选中元素&quot;&gt;&lt;/a&gt;CSS选中元素&lt;/h5&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
      
    
    </summary>
    
      <category term="css" scheme="http://protagonistss.github.io.com/categories/css/"/>
    
    
      <category term="css" scheme="http://protagonistss.github.io.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>tomcat</title>
    <link href="http://protagonistss.github.io.com/2019/05/01/tomcat/"/>
    <id>http://protagonistss.github.io.com/2019/05/01/tomcat/</id>
    <published>2019-04-30T20:49:42.000Z</published>
    <updated>2019-04-30T13:44:40.854Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h4><ul><li>tomcat 下载<ul><li><a href="http://tomcat.apache.org/" target="_blank" rel="noopener">tomcat 下载地址</a></li></ul></li><li>mac 下载tar.gz格式<ul><li>解压 `tar -zxvf apache-tomcat-9.0.19.tar.gz </li><li>将解压后的文件夹重命名为Tomcat( 之所以重名,只是习惯性命名 )放到/Library下</li><li>进入到Tomcat 文件夹下的bin目录</li><li>设置bin目录下的所有.sh文件的读写执行权限 <code>sudo chmod 755 *.sh</code></li><li>启动tomcat 服务<code>sudo sh startup.sh</code></li><li>关闭tomcat服务<code>sudo sh shutdown.sh</code></li></ul></li><li>注意:tomcat 的配置信息都在server.xml文件里配置，如果想自定义配置,可以去xml文件配置</li></ul><h4 id="Eclipse-集成Tomcat"><a href="#Eclipse-集成Tomcat" class="headerlink" title="Eclipse 集成Tomcat"></a>Eclipse 集成Tomcat</h4><ul><li>Window-&gt;show view -&gt; server</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Tomcat&quot;&gt;&lt;a href=&quot;#Tomcat&quot; class=&quot;headerlink&quot; title=&quot;Tomcat&quot;&gt;&lt;/a&gt;Tomcat&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;tomcat 下载&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tomcat.apache.
      
    
    </summary>
    
      <category term="java" scheme="http://protagonistss.github.io.com/categories/java/"/>
    
    
      <category term="tomcat" scheme="http://protagonistss.github.io.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>div-横向排列和出现横向滚动条</title>
    <link href="http://protagonistss.github.io.com/2019/04/30/div-%E6%A8%AA%E5%90%91%E6%8E%92%E5%88%97%E5%92%8C%E5%87%BA%E7%8E%B0%E6%A8%AA%E5%90%91%E6%BB%9A%E5%8A%A8%E6%9D%A1/"/>
    <id>http://protagonistss.github.io.com/2019/04/30/div-横向排列和出现横向滚动条/</id>
    <published>2019-04-30T13:26:42.000Z</published>
    <updated>2019-04-30T05:32:57.541Z</updated>
    
    <content type="html"><![CDATA[<h5 id="出现横向滚动条"><a href="#出现横向滚动条" class="headerlink" title="出现横向滚动条"></a>出现横向滚动条</h5><p>核心思路是使用<code>white-space</code> 这个属性防止父容器内容换行，例子如下:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// html</span><br><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;li&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">// css</span><br><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">overflow-x</span>: scroll;</span><br><span class="line">  <span class="attribute">overflow-y</span>: hidden;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>:inline-block;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;出现横向滚动条&quot;&gt;&lt;a href=&quot;#出现横向滚动条&quot; class=&quot;headerlink&quot; title=&quot;出现横向滚动条&quot;&gt;&lt;/a&gt;出现横向滚动条&lt;/h5&gt;&lt;p&gt;核心思路是使用&lt;code&gt;white-space&lt;/code&gt; 这个属性防止父容器内容换行，例子如下
      
    
    </summary>
    
      <category term="css" scheme="http://protagonistss.github.io.com/categories/css/"/>
    
    
      <category term="div-css-inline" scheme="http://protagonistss.github.io.com/tags/div-css-inline/"/>
    
  </entry>
  
  <entry>
    <title>git-branch</title>
    <link href="http://protagonistss.github.io.com/2019/04/29/git-branch/"/>
    <id>http://protagonistss.github.io.com/2019/04/29/git-branch/</id>
    <published>2019-04-28T22:26:24.000Z</published>
    <updated>2019-04-28T14:29:51.151Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Git-branch"><a href="#Git-branch" class="headerlink" title="Git-branch"></a>Git-branch</h4><ul><li>git branch branch [starting-commit]</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch dev new-create d25bdb13539c9d584a434cc47da864fe49afd826</span><br><span class="line"></span><br><span class="line">dev:是当前所在的分之</span><br><span class="line">new-create:是要创建的新分支</span><br><span class="line">d25bdb13539c9d584a434cc47da864fe49afd826: 指定从当前分之的该次提交启动一个新分支。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Git-branch&quot;&gt;&lt;a href=&quot;#Git-branch&quot; class=&quot;headerlink&quot; title=&quot;Git-branch&quot;&gt;&lt;/a&gt;Git-branch&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;git branch branch [starting-comm
      
    
    </summary>
    
      <category term="git" scheme="http://protagonistss.github.io.com/categories/git/"/>
    
    
      <category term="git-branch" scheme="http://protagonistss.github.io.com/tags/git-branch/"/>
    
  </entry>
  
  <entry>
    <title>git-commit</title>
    <link href="http://protagonistss.github.io.com/2019/04/29/git-commit/"/>
    <id>http://protagonistss.github.io.com/2019/04/29/git-commit/</id>
    <published>2019-04-28T21:39:35.000Z</published>
    <updated>2019-05-01T03:37:22.885Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Git-commit"><a href="#Git-commit" class="headerlink" title="Git-commit"></a>Git-commit</h4><ul><li>在Git中，提交(commit)是用来记录版本库的变更。</li><li>HEAD<ul><li>HEAD 始终指向当前分之的最近提交。当切换分之，HEAD会更新为之乡新分支的最近提交。</li></ul></li><li>ORIG_HEAD <ul><li>某些操作，比如合并和reset，会把调整为新值之前的先前版本的HEAD记录到ORIG_HEAD中。可以使用ORIG_HEAD来恢复或回滚到之前的状态或者做一个比较。</li></ul></li><li>git bisect<ul><li>在使用git bisect 的时候，你首先需要确定”好”提交和”坏”提交，</li></ul></li><li>git blame <ul><li>可以告知我们一个文件中的每一行最后是谁修改的和哪次提交做出了变更，即当前文件的状态。</li><li>参数-L，查看文件的多少行</li></ul></li><li>git diff</li><li>git show dev:文件名<ul><li>显示该文件在dev分之中的状态</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Git-commit&quot;&gt;&lt;a href=&quot;#Git-commit&quot; class=&quot;headerlink&quot; title=&quot;Git-commit&quot;&gt;&lt;/a&gt;Git-commit&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在Git中，提交(commit)是用来记录版本库的变更。&lt;/li
      
    
    </summary>
    
      <category term="git" scheme="http://protagonistss.github.io.com/categories/git/"/>
    
    
      <category term="git-commit" scheme="http://protagonistss.github.io.com/tags/git-commit/"/>
    
  </entry>
  
  <entry>
    <title>Vue-get请求传输数组</title>
    <link href="http://protagonistss.github.io.com/2019/04/28/Vue-get%E8%AF%B7%E6%B1%82%E4%BC%A0%E8%BE%93%E6%95%B0%E7%BB%84/"/>
    <id>http://protagonistss.github.io.com/2019/04/28/Vue-get请求传输数组/</id>
    <published>2019-04-28T13:14:22.000Z</published>
    <updated>2019-04-28T05:18:48.629Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Vue-get请求中传输数组问题"><a href="#Vue-get请求中传输数组问题" class="headerlink" title="Vue-get请求中传输数组问题"></a>Vue-get请求中传输数组问题</h4><ul><li>发送get请求时,请求参数是数组，需要把数组JSON.stringify([1,2,3]),后台使用json.loads(‘’[1,2,3]’’)转成列表形式</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Vue-get请求中传输数组问题&quot;&gt;&lt;a href=&quot;#Vue-get请求中传输数组问题&quot; class=&quot;headerlink&quot; title=&quot;Vue-get请求中传输数组问题&quot;&gt;&lt;/a&gt;Vue-get请求中传输数组问题&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;发送get请求时
      
    
    </summary>
    
      <category term="Vue" scheme="http://protagonistss.github.io.com/categories/Vue/"/>
    
    
      <category term="Vue-get-array" scheme="http://protagonistss.github.io.com/tags/Vue-get-array/"/>
    
  </entry>
  
  <entry>
    <title>docker</title>
    <link href="http://protagonistss.github.io.com/2019/04/28/docker/"/>
    <id>http://protagonistss.github.io.com/2019/04/28/docker/</id>
    <published>2019-04-27T23:04:48.000Z</published>
    <updated>2019-05-05T01:39:49.192Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Docker-命令"><a href="#Docker-命令" class="headerlink" title="Docker 命令"></a>Docker 命令</h3><ul><li>获镜像<ul><li>docker pull 镜像名</li></ul></li><li>使用tag命令添加镜像标签<ul><li>docker tag ubuntu:latest myubuntu:latest</li><li>注意,这里的myubuntu:latest 和ubuntu:latest 镜像的ID其实是完全一致的,它们实际上同一个镜像文件，知识别名不同而已。</li></ul></li><li>进入容器中<ul><li>docker attach 使用该命令 进入容器时候,当多个窗口同时attach到同一个容器中的时候,所有的窗口都会同步显示,所以一个窗口进行阻塞操作的时候,另外的窗口中的容器也会阻塞,而且值得一提的是,当使用exit退出容器的时候,容器会关掉。前提是容器没有使用-d参数后台运行。</li><li>docker exec -it 容器名 /bin/bash 这种方式与attach相反。</li></ul></li><li>docker ps -qa 查看所有容器的ID</li></ul><h5 id="导入和导出容器"><a href="#导入和导出容器" class="headerlink" title="导入和导出容器"></a>导入和导出容器</h5><h6 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h6><ul><li>docker export -o 文件名 容器ID<ul><li><code>docker export -o test.tar ceba23bdb8db</code></li></ul></li><li>docker export 容器ID  &gt; 文件名<ul><li><code>docker export ceba23bdb8db &gt; test.tar</code></li></ul></li></ul><h6 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h6><ul><li><code>docker import test.tar  test/demo</code></li></ul><ul><li>查看容器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker top 容器名 or ID</span><br><span class="line">docker container inpect 容器名 or ID</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Docker-命令&quot;&gt;&lt;a href=&quot;#Docker-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker 命令&quot;&gt;&lt;/a&gt;Docker 命令&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;获镜像&lt;ul&gt;
&lt;li&gt;docker pull 镜像名&lt;/li&gt;
&lt;/u
      
    
    </summary>
    
      <category term="docker" scheme="http://protagonistss.github.io.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://protagonistss.github.io.com/tags/docker/"/>
    
  </entry>
  
</feed>
