<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>protagonistss</title>
  
  <subtitle>我心向光明</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://protagonistss.github.io.com/"/>
  <updated>2019-04-28T14:29:51.151Z</updated>
  <id>http://protagonistss.github.io.com/</id>
  
  <author>
    <name>protagonist</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git-branch</title>
    <link href="http://protagonistss.github.io.com/2019/04/29/git-branch/"/>
    <id>http://protagonistss.github.io.com/2019/04/29/git-branch/</id>
    <published>2019-04-28T22:26:24.000Z</published>
    <updated>2019-04-28T14:29:51.151Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Git-branch"><a href="#Git-branch" class="headerlink" title="Git-branch"></a>Git-branch</h4><ul><li>git branch branch [starting-commit]</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch dev new-create d25bdb13539c9d584a434cc47da864fe49afd826</span><br><span class="line"></span><br><span class="line">dev:是当前所在的分之</span><br><span class="line">new-create:是要创建的新分支</span><br><span class="line">d25bdb13539c9d584a434cc47da864fe49afd826: 指定从当前分之的该次提交启动一个新分支。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Git-branch&quot;&gt;&lt;a href=&quot;#Git-branch&quot; class=&quot;headerlink&quot; title=&quot;Git-branch&quot;&gt;&lt;/a&gt;Git-branch&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;git branch branch [starting-comm
      
    
    </summary>
    
      <category term="git" scheme="http://protagonistss.github.io.com/categories/git/"/>
    
    
      <category term="git-branch" scheme="http://protagonistss.github.io.com/tags/git-branch/"/>
    
  </entry>
  
  <entry>
    <title>git-commit</title>
    <link href="http://protagonistss.github.io.com/2019/04/29/git-commit/"/>
    <id>http://protagonistss.github.io.com/2019/04/29/git-commit/</id>
    <published>2019-04-28T21:39:35.000Z</published>
    <updated>2019-04-28T14:25:41.009Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Git-commit"><a href="#Git-commit" class="headerlink" title="Git-commit"></a>Git-commit</h4><ul><li>在Git中，提交(commit)是用来记录版本库的变更。</li><li><p>HEAD</p><ul><li>HEAD 始终指向当前分之的最近提交。当切换分之，HEAD会更新为之乡新分支的最近提交。</li></ul></li><li><p>ORIG_HEAD </p><ul><li>某些操作，比如合并和reset，会把调整为新值之前的先前版本的HEAD记录到ORIG_HEAD中。可以使用ORIG_HEAD来恢复或回滚到之前的状态或者做一个比较。</li></ul></li><li>git bisect<ul><li>在使用git bisect 的时候，你首先需要确定”好”提交和”坏”提交，</li></ul></li><li>git blame <ul><li>可以告知我们一个文件中的每一行最后是谁修改的和哪次提交做出了变更，即当前文件的状态。</li><li>参数-L，查看文件的多少行</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Git-commit&quot;&gt;&lt;a href=&quot;#Git-commit&quot; class=&quot;headerlink&quot; title=&quot;Git-commit&quot;&gt;&lt;/a&gt;Git-commit&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在Git中，提交(commit)是用来记录版本库的变更。&lt;/li
      
    
    </summary>
    
      <category term="git" scheme="http://protagonistss.github.io.com/categories/git/"/>
    
    
      <category term="git-commit" scheme="http://protagonistss.github.io.com/tags/git-commit/"/>
    
  </entry>
  
  <entry>
    <title>Vue-get请求传输数组</title>
    <link href="http://protagonistss.github.io.com/2019/04/28/Vue-get%E8%AF%B7%E6%B1%82%E4%BC%A0%E8%BE%93%E6%95%B0%E7%BB%84/"/>
    <id>http://protagonistss.github.io.com/2019/04/28/Vue-get请求传输数组/</id>
    <published>2019-04-28T13:14:22.000Z</published>
    <updated>2019-04-28T05:18:48.629Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Vue-get请求中传输数组问题"><a href="#Vue-get请求中传输数组问题" class="headerlink" title="Vue-get请求中传输数组问题"></a>Vue-get请求中传输数组问题</h4><ul><li>发送get请求时,请求参数是数组，需要把数组JSON.stringify([1,2,3]),后台使用json.loads(‘’[1,2,3]’’)转成列表形式</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Vue-get请求中传输数组问题&quot;&gt;&lt;a href=&quot;#Vue-get请求中传输数组问题&quot; class=&quot;headerlink&quot; title=&quot;Vue-get请求中传输数组问题&quot;&gt;&lt;/a&gt;Vue-get请求中传输数组问题&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;发送get请求时
      
    
    </summary>
    
      <category term="Vue" scheme="http://protagonistss.github.io.com/categories/Vue/"/>
    
    
      <category term="Vue-get-array" scheme="http://protagonistss.github.io.com/tags/Vue-get-array/"/>
    
  </entry>
  
  <entry>
    <title>docker</title>
    <link href="http://protagonistss.github.io.com/2019/04/28/docker/"/>
    <id>http://protagonistss.github.io.com/2019/04/28/docker/</id>
    <published>2019-04-27T23:04:48.000Z</published>
    <updated>2019-04-28T14:52:54.106Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Docker-命令"><a href="#Docker-命令" class="headerlink" title="Docker 命令"></a>Docker 命令</h3><ul><li>获镜像<ul><li>docker pull 镜像名</li></ul></li><li>使用tag命令添加镜像标签<ul><li>docker tag ubuntu:latest myubuntu:latest</li><li>注意,这里的myubuntu:latest 和ubuntu:latest 镜像的ID其实是完全一致的,它们实际上同一个镜像文件，知识别名不同而已。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Docker-命令&quot;&gt;&lt;a href=&quot;#Docker-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker 命令&quot;&gt;&lt;/a&gt;Docker 命令&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;获镜像&lt;ul&gt;
&lt;li&gt;docker pull 镜像名&lt;/li&gt;
&lt;/u
      
    
    </summary>
    
      <category term="docker" scheme="http://protagonistss.github.io.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://protagonistss.github.io.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>JMS</title>
    <link href="http://protagonistss.github.io.com/2019/04/28/JMS/"/>
    <id>http://protagonistss.github.io.com/2019/04/28/JMS/</id>
    <published>2019-04-27T21:11:23.000Z</published>
    <updated>2019-04-27T15:07:20.936Z</updated>
    
    <content type="html"><![CDATA[<h5 id="JMS-消息服务介绍和使用场景"><a href="#JMS-消息服务介绍和使用场景" class="headerlink" title="JMS 消息服务介绍和使用场景"></a>JMS 消息服务介绍和使用场景</h5><h6 id="什么是JMS-消息队列的使用场景"><a href="#什么是JMS-消息队列的使用场景" class="headerlink" title="# 什么是JMS,消息队列的使用场景"></a># 什么是JMS,消息队列的使用场景</h6><ul><li>什么是JMS：java 消息服务(java message Service),java 平台中关于面向消息中间件的接口</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;JMS-消息服务介绍和使用场景&quot;&gt;&lt;a href=&quot;#JMS-消息服务介绍和使用场景&quot; class=&quot;headerlink&quot; title=&quot;JMS 消息服务介绍和使用场景&quot;&gt;&lt;/a&gt;JMS 消息服务介绍和使用场景&lt;/h5&gt;&lt;h6 id=&quot;什么是JMS-消息队列的使
      
    
    </summary>
    
      <category term="java" scheme="http://protagonistss.github.io.com/categories/java/"/>
    
    
      <category term="RocketMQ" scheme="http://protagonistss.github.io.com/tags/RocketMQ/"/>
    
  </entry>
  
  <entry>
    <title>https</title>
    <link href="http://protagonistss.github.io.com/2019/04/27/https/"/>
    <id>http://protagonistss.github.io.com/2019/04/27/https/</id>
    <published>2019-04-27T13:56:56.000Z</published>
    <updated>2019-04-27T15:04:12.155Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="http协议" scheme="http://protagonistss.github.io.com/categories/http%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="https" scheme="http://protagonistss.github.io.com/tags/https/"/>
    
  </entry>
  
</feed>
